info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 使用gin框架开发的前后端分离的web项目.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: gin blog
  version: "1.0"
paths:
  /api/v1/tags:
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: string
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 新增文章标签
      tags:
      - tags
  /api/v1/tags/{id}:
    put:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ID
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: token
        in: query
        name: token
        required: true
        type: string
      - description: ModifiedBy
        in: query
        name: modified_by
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 修改文章标签
      tags:
      - tags
  /auth:
    post:
      parameters:
      - description: 用户名(eg:test)
        in: query
        name: username
        required: true
        type: string
      - description: 密码(eg:test123456)
        in: query
        name: password
        required: true
        type: string
      - description: 密码(eg:limq)
        in: formData
        name: yzm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"token":"xxx"},"msg":"success"}'
          schema:
            type: string
      summary: 获取token
      tags:
      - auth
swagger: "2.0"
